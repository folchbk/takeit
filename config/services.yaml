# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.user:
        class: App\Admin\UserAdmin
        arguments: [~, App\Entity\User, App\Controller\UserAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: User }
        public: true

    admin.deal:
        class: App\Admin\DealAdmin
        arguments: [~, App\Entity\Deal, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Deal }
        public: true

    admin.local:
        class: App\Admin\LocalAdmin
        arguments: [~, App\Entity\Local, App\Controller\LocalAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Local }
        public: true

    App\Admin\PlaylistAdmin:
        calls:
            - [addChild, ['App\Admin\TableAdmin', 'conjunto']]
    admin.table:
        class: App\Admin\TableAdmin
        arguments: [~, App\Entity\Table, App\Controller\TableAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Table }
        public: true

    admin.client:
        class: App\Admin\ClientAdmin
        arguments: [~, App\Entity\Client, App\Controller\ClientAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Client }
        public: true

    admin.order:
        class: App\Admin\OrderAdmin
        arguments: [~, App\Entity\Order, App\Controller\OrderAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Order }
        public: true

    admin.invoice:
        class: App\Admin\InvoiceAdmin
        arguments: [~, App\Entity\Invoice, App\Controller\InvoiceAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Invoice }
        public: true

    admin.product:
        class: App\Admin\ProductAdmin
        arguments: [~, App\Entity\Product, App\Controller\ProductAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Product }
        public: true

    admin.menu:
        class: App\Admin\MenuAdmin
        arguments: [~, App\Entity\Menu, App\Controller\MenuAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Menu }
        public: true

    admin.ingredient:
        class: App\Admin\IngredientAdmin
        arguments: [~, App\Entity\Ingredient, App\Controller\IngredientAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Ingredient }
        public: true

    admin.type_product:
        class: App\Admin\TypeProductAdmin
        arguments: [~, App\Entity\TypeProduct, App\Controller\TypeProductAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: TypeProduct }
        public: true

    admin.category_product:
        class: App\Admin\CategoryProductAdmin
        arguments: [~, App\Entity\CategoryProduct, App\Controller\CategoryProductAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: CategoryProduct }
        public: true
